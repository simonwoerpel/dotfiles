# vim: filetype=muttrc
# PGP
# set pgp_default_version=gpg
# set pgp_key_version=default
# set pgp_receive_version=default
# set pgp_send_version=default
# set pgp_sign_micalg=pgp-sha1
# set pgp_gpg=/usr/bin/gpg
# set pgp_gpg_pubring=~/.gnupg/pubring.gpg
# set pgp_gpg_secring=~/.gnupg/secring.gpg

set pgp_autosign
# if this variables is set, Mutt will ask to sign all the
# # outbound messages. (1)
#
#set pgp_autoencrypt
# # if this variable is set, Mutt will ask to encrypt all the
# # outbound messages. (1)
#
# set pgp_encryptself
# # save an encrypted copy of all sent messages that we want to encrypt
# # (need the general configuration variable set copy=yes).
#
set pgp_replysign
# # when you answer a signed message, the response message will be
# # signed too.
#
set pgp_replyencrypt
# # when you answer an encrypted message, the response message
# # will be encrypted too.
#
set pgp_verify_sig=yes
# # Do you want to automatically verify incoming signed messages?
# # Of course!
#
set pgp_timeout=60
# # delete pass phrase from the memory cache <n> seconds
# # after typing it. (2)
#
set pgp_sign_as="2EFFA5E4"

# # Note: it is posible to set it to the user id, but
# # this can be confuse if you have the same user id with different keys.
# set pgp_strict_enc
# # use "quoted-printable" when PGP requires it.
# unset pgp_long_ids
# # Do not use 64 bits key ids, use 32 bits key ids.
# set pgp_sign_micalg=<some>
# # message integrity check algorithm, where
# # <some> is something from the next: (3)

# http://blog.florianheinle.de/post/47723652902/mutt-offlineimap-notmuch-goobook
set pgp_decode_command="gpg %?p?--passphrase-fd 0? --no-verbose --batch --output - %f"
set pgp_verify_command="gpg --no-verbose --batch --output - --verify %s %f"
set pgp_decrypt_command="gpg --passphrase-fd 0 --no-verbose --batch --output - %f"
set pgp_sign_command="gpg --no-verbose --batch --output - --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u   %a? %f"
set pgp_clearsign_command="gpg --no-verbose --batch --output - --passphrase-fd 0 --armor --textmode --clearsign %?a?  -u %a? %f"
set pgp_import_command="gpg --no-verbose --import -v %f"
set pgp_export_command="gpg --no-verbose --export --armor %r"
set pgp_verify_key_command="gpg --no-verbose --batch --fingerprint --check-sigs %r"
set pgp_list_pubring_command="gpg --no-verbose --batch --with-colons --list-keys %r" 
set pgp_list_secring_command="gpg --no-verbose --batch --with-colons --list-secret-keys %r" 
set pgp_good_sign="^gpg: Good signature from"
set crypt_replysign
set crypt_replyencrypt=yes
set crypt_verify_sig=yes

